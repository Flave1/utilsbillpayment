@model DepositModel
@{
    /**/

    /**/

    ViewBag.Title = "Manage Wallet";
    Layout = "~/Views/Shared/_LayOut.cshtml";
    //var list = Model.List;

    var walletHistory = new List<DepositListingModel>();
    if (ViewBag.WalletHistory == null)
    {
        walletHistory = new List<DepositListingModel>();
    }
    else
    {
        walletHistory = ViewBag.WalletHistory;
    }

}




    <div class="dashright ">

        <link rel="preconnect" href="https://fonts.gstatic.com">
        <link href="~/Content/css/Kendo/css/kendo.common.min.css" rel="stylesheet" />
        <link href="~/Content/css/Kendo/css/kendo.default.min.css" rel="stylesheet" />
        <link href="~/Content/css/Kendo/css/kendo.default.mobile.min.css" rel="stylesheet" />
        @*<link href="https://fonts.googleapis.com/css2?family=Libre+Barcode+39+Text&display=swap" rel="stylesheet">*@
        <div class="page-head">
            <h2>Manage Wallet</h2>
        </div>
        <div class="cl-mcont">
            <div class="row">
                <style>
                    label {
                        text-transform: uppercase;
                        font-weight: bold;
                    }

                    .input {
                        font-weight: bold;
                        font-size: 15px;
                        height: 40px;
                    }
                </style>
                <div class="col-md-21">
                    <div class="block-flat">
                        @if (Convert.ToBoolean(ViewBag.IsPlatformAssigned))
                        {
                            <div class="" style="text-align:right; font-size:20px;  font-weight:bold; padding-bottom:10px; border-bottom:0.8px solid #f4e8e8;">
                                <span id="balanceSpan" style="color:#00a2e8;">SSL: @(ViewBag.balance == null ? "0" : string.Format("{0:N0}", ViewBag.balance))</span>
                            </div>
                            <div class="contarea meterpage">
                                @if (Convert.ToBoolean(ViewBag.IsPlatformAssigned))
                                {
                                    <div class="container-fluid" style="background:white; ">

                                        <div class="row">
                                            <div class="col-md-3 current" id="tab-1" style=" border-right:1px solid #f4e8e8 ;">
                                                <form style="padding-left:11px;">

                                                    <div class="row">
                                                        <div class="form-group row">
                                                            <div class="col-md-11">
                                                                <label>Select POS ID</label>
                                                                @Html.DropDownList("PosId", new SelectList(ViewBag.userPos, "value", "text"), "Select POS ID", new { @class = "form-control col-md-6 input", @id = "posDrp" })
                                                                @Html.ValidationMessageFor(Model => Model.PosId)

                                                            </div>

                                                        </div>
                                                        <div class="form-group row">
                                                            <div class="col-md-6">
                                                                <label>CHX/CASH</label>
                                                                @Html.DropDownList("DepositType", new SelectList(ViewBag.DepositTypes, "value", "text"), null, new { @class = "form-control input", @onchange = "onPaymentTypeChange()", @id = "paymentType" })
                                                            </div>
                                                            <div class="col-md-4 chkBankDiv" style="display: none ">
                                                                <label>VALUE DATE</label>
                                                                <input type="text" style="font-weight:bold; text-align:right;" name="ValueDate" id="ValueDate" class="form-control col-md-8 chkBankDiv">
                                                            </div>
                                                        </div>
                                                        <div class="form-group row">
                                                            <div class="col-md-11 chkBankDiv" style="display: none ">
                                                                <label>ISSUING BANK</label>
                                                                @Html.DropDownList("ChkBankName", null, "-Select Bank-", new { @class = "input form-control", })
                                                            </div>
                                                        </div>
                                                        <div class="form-group row">
                                                            <div class="col-md-11 chkBankDiv" style="display:none">
                                                                <label>NAME ON CHEQUE</label>
                                                                <input type="text" id="NameOnCheque" name="NameOnCheque" class="form-control input">
                                                            </div>
                                                        </div>

                                                        <div class="form-group row">
                                                            <div class="col-md-11">
                                                                <label>CHX # or SLIP ID</label>
                                                                <input type="text" id="ChkOrSlipNo" name="ChkOrSlipNo" class="form-control input" style="width:100% !important;">
                                                            </div>
                                                        </div>

                                                        <div class="form-group row">
                                                            <div class="col-md-11">
                                                                <label>VENDTECH BANK DETAILS</label>
                                                                @Html.DropDownList("BankAccountId", new SelectList(ViewBag.bankAccounts, "value", "text"), null, new { @class = "form-control input", @id = "bankAccountDrp" })
                                                            </div>
                                                        </div>
                                                        <div class="form-group row">
                                                            <div class="col-md-11">
                                                                <label>Deposit Amount</label>
                                                                <input type="text" style="font-size: 24px; border-radius:10px; border:1px solid #808080; font-weight:bold; color: #000000 !important;" id="amountDisplay" onkeypress="javascript:return isNumber(event)" onkeyup="getAmountWithPercentage()" class="form-control">
                                                                <input type="hidden" id="amount" name="Amount">
                                                            </div>
                                                            <div class="col-md-11">
                                                                <label>PLUS <span id="agentPercentage">@ViewBag.percentage</span>% Commision</label>
                                                                <input class="form-control" type="text" id="percentageAmount" style="font-size: 50px;
                                                                height: 80px;
                                                                border-radius: 10px;
                                                                border: none;
                                                                font-weight: bolder;
                                                                background: #ffffff;
                                                                color: #ff0000 !important;" readonly />
                                                                <input type="hidden" name="TotalAmountWithPercentage" id="percentageAmountHdn" />
                                                            </div>

                                                        </div>

                                                        <div class="editpro-row submt " style="padding-right : 20px;">
                                                            <input type="button" class="savebttn addDepositBtn pull-left" value="ADD BALANCE">
                                                        </div>
                                                    </div>

                                                </form>
                                            </div>
                                            <div class="col-md-9">
                                                <h4>Latest deposit history</h4>
                                                <div class="exportdata">
                                                    <table class="table table-bordered" id="datatable-icons">
                                                        <thead>
                                                            <tr>
                                                                <th class="sorting" data-sortby="CreatedAt">DATE/TIME</th>
                                                                <th class="sorting" data-sortby="CreatedAt">VALUE DATE</th>
                                                                <th class="sorting" data-sortby="POS">POS ID</th>
                                                                <th class="sorting" data-sortby="UserName">USER NAME</th>
                                                                <th class="sorting" data-sortby="PaymentType">TYPE</th>
                                                                <th class="sorting" data-sortby="BANK">BANK</th>
                                                                <th class="sorting" data-sortby="CheckNumberOrSlipId">REF #</th>
                                                                <th class="sorting" data-sortby="Amount">AMOUNT</th>
                                                                <th class="sorting" data-sortby="PercentageAmount">%</th>
                                                                <th class="sorting" data-sortby="NewBalance">NEW BALANCE</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @Html.Partial("Partials/_depositListing", walletHistory)
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="contarea">
                                        <p>
                                            Service not assigned<br />
                                            Please contact VENDTECH on +23279990990
                                        </p>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="contarea">
                                <p>
                                    Service not assigned<br />
                                    Please contact VENDTECH on +23279990990
                                </p>
                            </div>
                        }


                    </div>
                </div>
            </div>
        </div>
    </div>





@section scripts{
    <script src="~/Scripts/UserDefinedScripts/paging.js"></script>
    <script src="~/Content/css/Kendo/js/kendo.all.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2019.2.514/js/cultures/kendo.culture.en-GB.min.js"></script>
    @*<script type="text/javascript">
        var totalCount = "@Model.TotalCount";
        </script>*@



    <script type="text/javascript">
            function thousands_separators(num) {
                var num_parts = num.toString().split(".");
                num_parts[0] = num_parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                return num_parts.join(".");
            }
            function onPaymentTypeChange() {
                if ($("#paymentType").val() == "2")

                    $(".chkBankDiv").show();
                else {
                    $(".chkBankDiv").hide();
                    $("#ChkBankName").val('');
                    $("#NameOnCheque").val('');
                }
            }
            function getAmountWithPercentage() {
                var displayVal = $("#amountDisplay").val();
                var val = "";
                if (displayVal) {
                    var cc = displayVal.replace(/\,/g, "");
                    $("#amount").val(cc);
                    val = $("#amount").val();
                    $("#amountDisplay").val(thousands_separators(val));
                }
                if (val && !isNaN(val)) {
                    val = parseInt(val);
                    var drpValue = '@ViewBag.percentage';
                    if (drpValue != "") {

                        var percentageAmt = (drpValue / 100) * val;
                        var percentValue = parseInt(val + percentageAmt);
                        $("#percentageAmountHdn").val(percentValue);
                        $("#percentageAmount").val(thousands_separators(percentValue));
                    }
                    else {
                        $("#percentageAmountHdn").val(val);
                        $("#percentageAmount").val(thousands_separators(val));
                    }
                }
                else {
                    $("#percentageAmountHdn").val('');
                    $("#percentageAmount").val('');
                    $("#amount").val('');
                }
            }
            function isNumber(evt) {
                var iKeyCode = (evt.which) ? evt.which : evt.keyCode
                if (iKeyCode > 31 && (iKeyCode < 48 || iKeyCode > 57))
                    return false;

                return true;
            }
            $(document).ready(function(){
                $('.tabnav ul li').click(function(){
                    var tab_id = $(this).attr('data-tab');

                    $('.tabnav ul li').removeClass('current');
                    $('.tabcont-row').removeClass('current');

                    $(this).addClass('current');
                    $("#"+tab_id).addClass('current');
                });

                $("#posDrp").on("change", function () {
                    if ($("#posDrp").val())
                        window.location.href = '/Deposit/Index?posId=' + $("#posDrp").val();
                    else
                        window.location.href = '/Deposit/Index';
                })
            });
            $(document).ready(function () {
                var d = new Date();

                $("#ValueDate").kendoDatePicker({
                    culture: "en-GB",
                  value: new Date(d.getFullYear(), d.getMonth() + 2, d.getDate()),
                });

           
                $("#ValueDate").kendoDatePicker({
                    max: new Date(d.getFullYear(), d.getMonth(), d.getDate()),
                    format: "dd/MM/yyyy",
                    max: new Date(today.setDate(today.getDate() + 30)),
                    maxDate: new Date, minDate: new Date(2007, 6, 12),
                });

                var datePicker1 = $("#ValueDate").data("kendoDatePicker");
                $("#ValueDate").click(function () {
                    datePicker1.open();
                })


                //initialize the javascript
                if ('@ViewBag.posId' != null && '@ViewBag.posId' != '') {
                    $("#posDrp").val('@ViewBag.posId');
                }
                App.init();
                $('.addDepositBtn').live("click", function () {
                    return AddDeposit($(this));
                });
                onBankAccountChange();
                //Templates.ManageTemplates(totalCount);
            });
            function onBankAccountChange() {
                var id = $("#bankAccountDrp").val();
                $.ajax({
                    url: '/Deposit/GetBankAccountDetail?bankAccountId=' + id,
                    success: function (data) {

                        if (data != null) {

                            var trailingCharsIntactCount = 4;
                            data.bankAccount.AccountNumber = new Array(data.bankAccount.AccountNumber.length - trailingCharsIntactCount + 1).join('x')
                                   + data.bankAccount.AccountNumber.slice(-trailingCharsIntactCount);

                            $("#bankName").text("(" + data.bankAccount.BankName + " - " + data.bankAccount.AccountNumber+" )");
                            //$("#holderName").text(data.bankAccount.AccountName);
                            //$("#accNo").text(data.bankAccount.AccountNumber);
                            //$("#bban").text(data.bankAccount.BBAN);

                        }
                    }
                })
        }

        function AddDeposit(sender) {
            if (!$("#amount").val() || $("#amount").val() == "0")
            {
                    $.ShowMessage($('div.messageAlert'), "Amount is required and amount must be greater then 0.", MessageType.Error);
                    return;
                }
                else if (!$("#ChkOrSlipNo").val())
                {
                    $.ShowMessage($('div.messageAlert'), "Cheque or Slip Id is required.", MessageType.Error);
                    return;
                }

                //else if (!$("#chkbankname").val())
                //{
                //    $.showmessage($('div.messagealert'), "Cheque bank name is required.", MessageType.Error);

                //    //if ($('#paymentType').val() == "2")
                //    //{
                //    //   
                //    //    $.showmessage($('div.messagealert'), "check bank name is required.",MessageType.Error);
                //    //    return;
                //    //}
                //return;
                //}
                else {
                    $.ajaxExt({
                        url: baseUrl + '/Deposit/AddDeposit',
                        type: 'POST',
                        validate: true,
                        showErrorMessage: true,
                        messageControl: $('div.messageAlert'),
                        formToValidate: $(sender).parents("form:first"),
                        formToPost: $(sender).parents("form:first"),
                        isAjaxForm: true,
                        showThrobber: true,
                        button: $(sender),
                        throbberPosition: { my: "left center", at: "right center", of: $(sender) },
                        success: function (results, message) {
                            $.ShowMessage($('div.messageAlert'), message, MessageType.Success);
                            setTimeout(function () {
                                window.location.reload();
                            }, 1500);

                        }
                    });
                }

            }
    </script>
}

