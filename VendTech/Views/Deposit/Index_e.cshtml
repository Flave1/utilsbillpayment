@model DepositModel
@{
    /**/

    /**/

    ViewBag.Title = "Manage Wallet";
    Layout = "~/Views/Shared/_Layoutv2.cshtml";
    //var list = Model.List;

    var walletHistory = new List<DepositListingModel>();
    if (ViewBag.WalletHistory == null)
    {
        walletHistory = new List<DepositListingModel>();
    }
    else
    {
        walletHistory = ViewBag.WalletHistory;
    }

}

<link rel="preconnect" href="https://fonts.gstatic.com">
<link href="~/Content/css/Kendo/css/kendo.common.min.css" rel="stylesheet" />
<link href="~/Content/css/Kendo/css/kendo.default.min.css" rel="stylesheet" />
<link href="~/Content/css/Kendo/css/kendo.default.mobile.min.css" rel="stylesheet" />


<style>
    label {
        text-transform: uppercase;
        font-weight: bold;
        font-size: 10px
    }

    .input {
        font-weight: bold;
        font-size: 15px;
        height: 40px;
    }

    .sweet-alert h2 {
        color: red;
        font-weight: bold;
    }

    .sweet-alert p {
        font-weight: bold !important;
    }

    @@media only screen and (min-width: 769px) {
        .wallet-container {
           
        }
}


</style>

@Html.Partial("_Title")
@Html.Partial("_BalanceBar")

<div class="mt-5 wallet-container">
    @if (Convert.ToBoolean(ViewBag.IsPlatformAssigned))
    {
        <div class="row">
            <div class="col-md-4" style="border-right: 2px solid #f6eded;">
                <form style="box-shadow: 0 0 1px #8f7e7e; border: none; padding: 20px !important; ">

                    @{
                        var pos = (List<SelectListItem>)ViewBag.userPos;
                    }
                    @if (pos.Count > 1)
                    {
                        <div class="form-row">
                            <label class="col-sm-2 col-md-2" style=" width:20% !important;"> POS:</label>
                            @Html.DropDownList("PosId", new SelectList(ViewBag.userPos, "value", "text"), "SELECT POS", new { @class = "form-control col-md-6", style = " width:70% !important;  font-weight:bold; font-size:14px;", @id = "posDrp" })
                        </div>
                    }
                    else
                    {
                        <div class=" col-md-12">
                            <label class="control-label" style="font-weight:bold; font-size:30px">POS ID: @pos.FirstOrDefault().Text</label>
                            @Html.DropDownList("PosId", new SelectList(ViewBag.userPos, "value", "text"), null, new { @style = "height:35px; font-weight:bolder; display:none;", @class = " input form-control", @id = "posDrp" })

                        </div>

                    }

                    <input type="hidden" name="ContinueDepoit" id="ContinueDepoit" value="0" />
                    <div class="form-row mt-2">
                        <div class="col-6">
                            <label class="control-label">PAYMENT TYPE</label>
                            @Html.DropDownList("DepositType", new SelectList(ViewBag.DepositTypes, "value", "text"), null, new { @class = "form-control co-12", @onchange = "onPaymentTypeChange()", @id = "paymentType" })
                        </div>
                        <div class="col-6 chkBankDiv" style="display: none;">
                            <label class="control-label">VALUE DATE</label>
                            <input type="text" style="font-weight:bold; text-align:right;" name="ValueDate" id="ValueDate" class="form-control col-12 chkBankDiv">
                        </div>
                    </div>
                    <div class="form-row chkBankDiv mt-2" style="display: none ">
                        <label class="control-label">YOUR BANK</label>
                        @Html.DropDownList("ChkBankName", null, "-Select Bank-", new { @class = "input form-control", })
                    </div>
                    @*<div class="form-row chkBankDiv" style="display:none">
                        <label>NAME ON CHEQUE</label>
                        <input type="text" id="NameOnCheque" name="NameOnCheque" class="form-control input">
                    </div>*@
                    <input type="hidden" id="NameOnCheque" name="NameOnCheque" class="form-control input">
                    <div class="form-row mt-2">
                        <label>Cheque # or Deposit Slip #</label>
                        <input type="text" id="ChkOrSlipNo" name="ChkOrSlipNo" value="0" class="form-control input" style="width: 100% !important; text-align: right; color:red; font-weight:bold">

                    </div>

                    @*<div class="form-row mt-2">
                    <div class="col-md-11">
                        <label>VENDTECH BANK DETAILS</label>
                        @Html.DropDownList("BankAccountId", new SelectList(ViewBag.bankAccounts, "value", "text"), null, new { @class = "form-control input", @id = "bankAccountDrp" })
                    </div>
                </div>*@
                    @*@Html.Hidden("BankAccountId", new SelectList(ViewBag.bankAccounts, "value", "text"), new { @class = "form-control input", @id = "bankAccountDrp" })*@
                    <div class="form-row mt-2">
                        <div class="col-md-11">
                            <label>Deposit Amount</label>
                            <input type="text" value="" style="font-size: 24px; text-align:right; border-radius:10px; border:1px solid #808080; font-weight:bold; color: #000000 !important;" id="amountDisplay" onkeypress="javascript:return isNumber(event)" onkeyup="getAmountWithPercentage()" class="form-control">
                            <input type="hidden" id="amount" name="Amount">
                        </div>
                        <div class="col-md-11">
                            <label><span id="commission" style="display:none;">PLUS  <span id="agentPercentage">@ViewBag.percentage</span>% COMMISSION</span></label>
                            <input class="form-control" type="text" id="percentageAmount" style="font-size: 45px;
                                                                height: 80px;
                                                                border-radius: 10px;
                                                                border: none;
                                                                font-weight: bolder;
                                                                background: #ffffff;
                                                                text-align:right;
                                                                color: #ff0000 !important;" readonly />
                            <input type="hidden" name="TotalAmountWithPercentage" id="percentageAmountHdn" />
                        </div>

                    </div>

                    <div class="editpro-row submt " style="padding-right : 20px;">
                        @*<input type="button" class="savebttn addDepositBtn pull-left" id="btnAdd" value="ADD DEPOSIT">*@
                        <button type="button" class="savebttn btn submitBtn addDepositBtn " id="btnAdd">ADD FUNDS TO WALLET</button>
                    </div>

                </form>
            </div>

            <div class="col-md-8 d-none d-sm-block">
                <h4>Latest (10) deposit history</h4>
                <div class="exportdata table-wrapper-scroll-y my-custom-scrollbar">
                    <table class="table table-bordered" id="datatable-icons">
                        <thead>
                            <tr>
                                <th>DATE/TIME</th>
                                <th>VALUE DATE</th>
                                <th>POS ID</th>
                                <th>VENDOR</th>
                                <th>TYPE</th>
                                <th>BANK</th>
                                <th>REF #</th>
                                <th>AMOUNT</th>
                                <th>%</th>
                                <th>NEW BALANCE</th>
                            </tr>
                        </thead>
                        <tbody id="depositListing">
                            @Html.Partial("Partials/_depositListing", walletHistory)
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

    }
    else
    {
        <div class="contarea">
            <p>
                Service not assigned<br />
                Please contact VENDTECH on +23279990990
            </p>
        </div>
    }
</div>





@section scripts{
    <script src="~/Scripts/UserDefinedScripts/paging.js"></script>
    <script src="~/Content/css/Kendo/js/kendo.all.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2019.2.514/js/cultures/kendo.culture.en-GB.min.js"></script>
    @*<script type="text/javascript">
        var totalCount = "@Model.TotalCount";
        </script>*@



    <script type="text/javascript">
            function thousands_separators(num) {
                var num_parts = num.toString().split(".");
                num_parts[0] = num_parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                return num_parts.join(".");
            }
            function onPaymentTypeChange() {
                if ($("#paymentType").val() == "2")

                    $(".chkBankDiv").show();
                else {
                    $(".chkBankDiv").hide();
                    $("#ChkBankName").val('');
                    $("#NameOnCheque").val('');
                }
            }
            function getAmountWithPercentage() {
                var displayVal = $("#amountDisplay").val();
                var val = "";
                if (displayVal) {
                    var cc = displayVal.replace(/\,/g, "");
                    $("#amount").val(cc);
                    val = $("#amount").val();
                    $("#amountDisplay").val(thousands_separators(val));
                }
                if (val && !isNaN(val)) {
                    val = parseInt(val);
                    var drpValue = '@ViewBag.percentage';
                    if (drpValue != "") {

                        var percentageAmt = (drpValue / 100) * val;
                        var percentValue = parseInt(val + percentageAmt);
                        $("#percentageAmountHdn").val(percentValue);
                        $("#percentageAmount").val(thousands_separators(percentValue));
                    }
                    else {
                        $("#percentageAmountHdn").val(val);
                        $("#percentageAmount").val(thousands_separators(val));
                    }
                }
                else {
                    $("#percentageAmountHdn").val('');
                    $("#percentageAmount").val('');
                    $("#amount").val('');
                }
            }
            function isNumber(evt) {
                var iKeyCode = (evt.which) ? evt.which : evt.keyCode
                if (iKeyCode > 31 && (iKeyCode < 48 || iKeyCode > 57))
                    return false;

                return true;
            }
        $(document).ready(function () {

            if ('@ViewBag.percentage' > 0) {
                $("#commission").show();
            }
                $('.tabnav ul li').click(function(){
                    var tab_id = $(this).attr('data-tab');

                    $('.tabnav ul li').removeClass('current');
                    $('.tabcont-row').removeClass('current');

                    $(this).addClass('current');
                    $("#"+tab_id).addClass('current');
                });

                $("#posDrp").on("change", function () {
                    if ($("#posDrp").val())
                        window.location.href = '/Deposit/Index?posId=' + $("#posDrp").val();
                    else
                        window.location.href = '/Deposit/Index';
                })
            });
            $(document).ready(function () {
                var d = new Date();

                $("#ValueDate").kendoDatePicker({
                    culture: "en-GB",
                  value: new Date(d.getFullYear(), d.getMonth(), d.getDate()),
                });


                $("#ValueDate").kendoDatePicker({
                    max: new Date(d.getFullYear(), d.getMonth(), d.getDate()),
                    format: "dd/MM/yyyy",
                    max: new Date(d.setDate(d.getDate() + 30)),
                    maxDate: new Date, minDate: new Date(2007, 6, 12),
                });

                var datePicker1 = $("#ValueDate").data("kendoDatePicker");
                $("#ValueDate").click(function () {
                    datePicker1.open();
                })


                //initialize the javascript
                if ('@ViewBag.posId' != null && '@ViewBag.posId' != '') {

                    var posEd = '@ViewBag.posId';
                    if (posEd < 1) {
                        $("#posDrp").val(' ');
                    } else {
                        $("#posDrp").val('@ViewBag.posId');
                    }
                }
                App.init();
                $('.addDepositBtn').on("click", function () {
                    return AddDeposit($(this));
                });
          /*      onBankAccountChange();*/
                //Templates.ManageTemplates(totalCount);
            });
            //function onBankAccountChange() {
            //    var id = $("#bankAccountDrp").val();
            //    $.ajax({
            //        url: '/Deposit/GetBankAccountDetail?bankAccountId=' + id,
            //        success: function (data) {

            //            if (data != null) {

            //                var trailingCharsIntactCount = 4;
            //                data.bankAccount.AccountNumber = new Array(data.bankAccount.AccountNumber.length - trailingCharsIntactCount + 1).join('x')
            //                       + data.bankAccount.AccountNumber.slice(-trailingCharsIntactCount);

            //                $("#bankName").text("(" + data.bankAccount.BankName + " - " + data.bankAccount.AccountNumber+" )");
            //                //$("#holderName").text(data.bankAccount.AccountName);
            //                //$("#accNo").text(data.bankAccount.AccountNumber);
            //                //$("#bban").text(data.bankAccount.BBAN);

            //            }
            //        }
            //    })
            //}



    function AddDeposit(sender) {

        if (!$("#amount").val() || $("#amount").val() == "0") {
            $.ShowMessage($('div.messageAlert'), "Amount is required and amount must be greater then 0.", MessageType.Error);

            disableSubmit(false);
            return;
        }
        else if (!$("#posDrp").val()) {

            disableSubmit(false);
            $.ShowMessage($('div.messageAlert'), "POS Required.", MessageType.Error);
            return;
        }
        else if (!$("#ChkOrSlipNo").val()) {
            disableSubmit(false);
            $.ShowMessage($('div.messageAlert'), "Cheque or Slip Id is required.", MessageType.Error);
            return;
        }

        else {


            var amt = thousands_separators($("#amount").val());
            var invalidAmt = thousands_separators($("#amount").val() / 1000);

            $.ConfirmBox("DEPOSIT CONFIRMATION ALERT", "PLEASE CONFIRM DEPOSIT \n\n AMOUNT: NLe  " + amt +"", null, true, null, true, null, function () {
                disableSubmit(true);
                $("#ContinueDepoit").val(0);
                $.ajax({
                    url: baseUrl + '/Deposit/AddDeposit',
                    type: 'POST',
                    validate: true,
                    showErrorMessage: true,
                    messageControl: $('div.messageAlert'),
                    formToValidate: $(sender).parents("form:first"),
                    formToPost: $(sender).parents("form:first"),
                    isAjaxForm: true,
                    showThrobber: true,
                    button: $(sender),
                    throbberPosition: { my: "left center", at: "right center", of: $(sender) },
                    success: function (results, message) {
                        if (message != "Deposit request saved successfully.") {
                            reDeposit(sender, 2, message);
                            return;
                        }
                        $.ShowMessage($('div.messageAlert'), message, MessageType.Success);
                        setTimeout(function () {
                            window.location.href = baseUrl + '/Deposit/Index'
                        }, 1500);

                        disableSubmit(false);
                    },
                    error: function (results, message) {
                        disableSubmit(false);
                    }
                });

            })

        }

    }

    $("#posDrp").on("change", function () {
        let posId = $("#posDrp").val();

        if (posId) {
            fetchPosPercentage(posId);
        }
    })
    function fetchPosPercentage(posId) {

        $.ajax({
            url: '/Admin/Report/GetPosPercentage?pos=' + posId,
            success: function (res) {
                if (res.percentage > 0) {
                    $("#agentPercentage").text(res.percentage);
                    $("#commission").show();
                } else {
                    $("#commission").hide();
                }
            }
        });
    }


    function reDeposit(sender, ContinueDepoit, amt) {
        $("#ContinueDepoit").val(0);
        $.ConfirmBox("DUPLICATE DEPOSIT ALERT ", "YOU HAVE DEPOSITS WAITING APPROVAL! \n\n NLe: " + amt + "\n\n YOU CANNOT DO ANOTHER DEPOSIT UNTIL THE \n PENDING DEPOSIT IS APPROVED", null, true, null, true, null, function () {

            $.ajax({
                url: baseUrl + '/Deposit/AddDeposit',
                type: 'POST',
                validate: true,
                showErrorMessage: true,
                messageControl: $('div.messageAlert'),
                formToValidate: $(sender).parents("form:first"),
                formToPost: $(sender).parents("form:first"),
                isAjaxForm: true,
                showThrobber: true,
                button: $(sender),
                throbberPosition: { my: "left center", at: "right center", of: $(sender) },
                success: function (results, message) {
                    $(".sweet-alert h2").css("color", "green");
                    $.ShowMessage($('div.messageAlert'), message, MessageType.Success);
                    setTimeout(function () {
                        window.location.reload();
                    }, 1500);
                    disableSubmit(false);
                },
                error: function (results, message) {
                    disableSubmit(false);
                }
            });
        });
        $(".sweet-alert h2").css("color", "red");
        $(".confirm").hide();
        disableSubmit(false);
    }


    function disableSubmit(disabled = false) {
        if (disabled) {
            $("#btnAdd").css({ backgroundColor: '#56bb96' });
            $("#btnAdd").text('PROCESSING....');
            $("#btnAdd").prop('ADD BALANCE', true);
        } else {
            $("#btnAdd").css({ backgroundColor: '#f1cf09' });
            $("#btnAdd").text('ADD BALANCE');
            $("#btnAdd").prop('disabled', false);
        }

    }

    function thousands_separators (num) {
        var num_parts = num.toString().split(".");
        num_parts[0] = num_parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        return num_parts.join(".");
    }

    </script>
}

