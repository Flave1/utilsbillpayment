@model PagingResult<MeterAPIListingModel>
@using System.Web.Script.Serialization
@{ 
    Layout = null;
}
<style>
    .isActive {
        background: black;
        color: white;
        font-weight: bold;
    }

    .notActive {
        color: black;
        background: grey
    }

    .isActive:hover {
        color: black;
        background: grey
    }

    .notActive:hover {
        background: black;
        color: white;
        font-weight: bold;
    }
</style>

<div class="row">
    <div class="col-md-12">
        <div class="block-flat front">
            <div class="table-responsive">
                <input id="IsActive2" value="active" hidden />
                <div style='text-align: center; width:40%; height:40px; display:flex; '>
                    <button id="activeBtn"
                            style="width: 49%; border: none;" class="isActive"
                            onclick="openTab2('activeBtn')">
                        ACTIVE METERS
                    </button>
                    <button id="inActiveBtn"
                            style="width: 49%; border:none;" class="notActive"
                            onclick="openTab2('inActiveBtn')">
                        INACTIVE METERS
                    </button>
                </div>
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th colspan="6"><strong>SAVED METERS</strong></th>
                        </tr>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">METER #</th>
                            <th scope="col">NAME ON METER</th>
                            <th scope="col">ALIAS</th>
                            <th scope="col">DATE SAVED</th>
                            <th scope="col">EDIT</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.List != null)
                        {
                            var allMeters = Model.List.Select(x => new { value = x.MeterId, text = x.Number + " - " + x.Alias }).ToArray();
                            JavaScriptSerializer js = new JavaScriptSerializer();
                            int i = 0;
                            foreach (var item in Model.List)
                            {
                                //@Url.Action("Recharge", "Meter", new { meterId = item.MeterId })<a title="Recharge" class="recharge col-md-4" data-id="@item.MeterId" href='#'> </a>
                                i += 1;
                                <tr id="meterList">
                                    <th scope="row">@i</th>
                                    <td> <a onclick="purchaseUnitsByAdmin.openForm('@item.Vendor', '@item.Number', '@item.MeterId', '@item.POSId', '@item.UserId', '@item.Balance', '@item.POSSerialNumber', '@js.Serialize(allMeters)')" href="#">@item.Number</a> </td>
                                    <td>@item.Name</td>
                                    <td>@item.Alias</td>
                                    <td>@item.CreatedAt.ToString("dd MMMM yyyy")</td>
                                    <td><a title="Edit" style="cursor:pointer" class="editthis col-md-4" data-id="@item.MeterId" onclick="AdminPOS.openMeterForm(@item.MeterId, '@item.UserId')"><i class="fa fa-edit"></i></a></td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
